# Generated by Django 5.1 on 2024-08-30 11:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('size', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('material_type', models.CharField(choices=[('rent', 'Rent'), ('sale', 'Sale')], default='rent', max_length=4)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rent_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_rent', models.BooleanField(default=False)),
                ('is_sell', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('surfboard', 'Surfboard'), ('leash', 'Leash'), ('surfsuit', 'Surfsuit')], default='surfboard', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(auto_now_add=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SurfClub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(null=True, upload_to='uploads/')),
            ],
        ),
        migrations.CreateModel(
            name='Surfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('birthday', models.DateField()),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=50)),
                ('photo', models.ImageField(null=True, upload_to='uploads/')),
            ],
        ),
        migrations.CreateModel(
            name='SurfSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_selections', to='AppWeb.equipment')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='equipment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='AppWeb.equipmenttype'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='AppWeb.equipment')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='AppWeb.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='surf_club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surf_club', to='AppWeb.surfclub'),
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('birthday', models.DateField()),
                ('active', models.BooleanField(default=False)),
                ('photo', models.ImageField(null=True, upload_to='uploads/')),
                ('surf_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitors', to='AppWeb.surfclub')),
            ],
        ),
        migrations.CreateModel(
            name='LessonSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('day', models.DateField()),
                ('surf_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_schedules', to='AppWeb.surfclub')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='surf_club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='AppWeb.surfclub'),
        ),
        migrations.AddField(
            model_name='order',
            name='surfer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='AppWeb.surfer'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='AppWeb.forum')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_sent', to='AppWeb.surfer')),
            ],
        ),
        migrations.CreateModel(
            name='SurfLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ManyToManyField(related_name='lessons', through='AppWeb.EquipmentSelection', to='AppWeb.equipment')),
                ('surfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='AppWeb.surfer')),
            ],
        ),
        migrations.AddField(
            model_name='equipmentselection',
            name='surf_lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_selections', to='AppWeb.surflesson'),
        ),
        migrations.CreateModel(
            name='SurfSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surf_sessions', to='AppWeb.lessonschedule')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surf_sessions', to='AppWeb.monitor')),
                ('surf_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surf_sessions', to='AppWeb.surfclub')),
            ],
        ),
        migrations.AddField(
            model_name='surflesson',
            name='surf_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='AppWeb.surfsession'),
        ),
        migrations.AddField(
            model_name='surfclub',
            name='surf_spot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surf_clubs', to='AppWeb.surfspot'),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='uploads/')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='AppWeb.equipment')),
                ('surf_spot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='AppWeb.surfspot')),
            ],
        ),
        migrations.AddField(
            model_name='forum',
            name='surf_spot',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forum', to='AppWeb.surfspot'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('is_surfer', models.BooleanField(default=False)),
                ('is_surfclub', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='surfer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='surfclub',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='equipmentselection',
            unique_together={('surf_lesson', 'equipment')},
        ),
    ]
